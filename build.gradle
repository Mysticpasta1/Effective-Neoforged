plugins {
	alias libs.plugins.forge.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/effective.accesswidener")
}

repositories {
	mavenLocal()

	// publishing
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}

	// cloth config
	maven { url "https://maven.shedaniel.me/" }

	// satin
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
		content {
			includeGroup 'org.ladysnake'
			includeGroup 'io.github.ladysnake'
			includeGroup 'team.lodestar.lodestone'
		}
	}

	// mod menu
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}

	maven {
		url 'https://jitpack.io'
		content {
			includeGroupByRegex('com\\.github\\..*')
		}
	}

	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
		content {
			includeGroup('maven.modrinth')
		}
	}

	maven { url 'https://masa.dy.fi/maven' }

	// mialee misc
	maven { url "https://maven.willbl.dev/releases" }

	maven {
		url "https://cursemaven.com"
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	forge libs.forge

	mappings loom.officialMojangMappings()


	// midnightlib
	modImplementation(libs.midnightLib)
	include(libs.midnightLib)

	// satin
//	modImplementation(libs.satin) {
//		exclude group: 'net.fabricmc'
//	}
//	include(libs.satin)

	// lodestone lib
	modImplementation(libs.lodestoneLib) {
		transitive = false
	}
	include(libs.lodestoneLib)

	// iris and sodium
	modImplementation(libs.sodium)
	modImplementation(libs.iris)
	runtimeOnly(libs.jcpp)
	implementation(libs.glslTransformer)
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

java {
	withSourcesJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}
